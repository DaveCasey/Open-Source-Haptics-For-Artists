

# Example MDL file for Synth-A-Modeler
#
# Edgar Berdahl, 2012
# Audio Communication Group
# Technical University of Berlin
#
# -------------------------------------------------------------------
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.



















ground(0.0), mn40xn40yinstnce10 ,();
ground(0.0), mn40xn20yinstnce10 ,();
ground(0.0), mn40xn0yinstnce10 ,();
ground(0.0), mn40x20yinstnce10 ,();
ground(0.0), mn40x40yinstnce10 ,();
ground(0.0), mn20xn40yinstnce10 ,();
ground(0.0), mn20xn20yinstnce10 ,();
	mass(0.000182383*(1.0 + 0*(0.836068)),0.0,0.0),mn20xn0yinstnce10,();
ground(0.0), mn20x20yinstnce10 ,();
ground(0.0), mn20x40yinstnce10 ,();
ground(0.0), mn0xn40yinstnce10 ,();
	mass(0.000182383*(1.0 + 0*(-0.799939)),0.0,0.0),mn0xn20yinstnce10,();
	mass(0.000347734*(1.0 + 0*(0.574577)),0.0,0.0),massSnrmn0xn20yinstnce10,();
link(0.5,0.00,0.0), linkSnrmn0xn20yinstnce10, snareGroundinstnce10, massSnrmn0xn20yinstnce10 ,();
touch(2866.1,0.0243858,0.0), touchSnrmn0xn20yinstnce10, mn0xn20yinstnce10, massSnrmn0xn20yinstnce10 ,();
	mass(0.000182383*(1.0 + 0*(-0.542241)),0.0,0.0),mn0xn0yinstnce10,();
	mass(0.000182383*(1.0 + 0*(0.567359)),0.0,0.0),mn0x20yinstnce10,();
	mass(0.000275836*(1.0 + 0*(-0.119600)),0.0,0.0),massSnrmn0x20yinstnce10,();
link(0.5,0.00,0.0), linkSnrmn0x20yinstnce10, snareGroundinstnce10, massSnrmn0x20yinstnce10 ,();
touch(1330.67,0.0243858,0.0), touchSnrmn0x20yinstnce10, mn0x20yinstnce10, massSnrmn0x20yinstnce10 ,();
ground(0.0), mn0x40yinstnce10 ,();
ground(0.0), m20xn40yinstnce10 ,();
ground(0.0), m20xn20yinstnce10 ,();
	mass(0.000182383*(1.0 + 0*(-0.918061)),0.0,0.0),m20xn0yinstnce10,();
	mass(0.000378993*(1.0 + 0*(-0.061272)),0.0,0.0),massSnrm20xn0yinstnce10,();
link(0.5,0.00,0.0), linkSnrm20xn0yinstnce10, snareGroundinstnce10, massSnrm20xn0yinstnce10 ,();
touch(1944.84,0.0243858,0.0), touchSnrm20xn0yinstnce10, m20xn0yinstnce10, massSnrm20xn0yinstnce10 ,();
ground(0.0), m20x20yinstnce10 ,();
ground(0.0), m20x40yinstnce10 ,();
ground(0.0), m40xn40yinstnce10 ,();
ground(0.0), m40xn20yinstnce10 ,();
ground(0.0), m40xn0yinstnce10 ,();
ground(0.0), m40x20yinstnce10 ,();
ground(0.0), m40x40yinstnce10 ,();
	mass(0.001,0.0,0.0),drumstickinstnce10,();
touch(400,0.0425197,0.0), ttinstnce10, drumstickinstnce10, mn0xn0yinstnce10 ,();
ground(0.0), snareGroundinstnce10 ,();
link(184.38,0.0001,0.0), l1instnce10, mn40xn0yinstnce10, mn20xn0yinstnce10 ,();
link(184.38,0.0001,0.0), l2instnce10, mn20xn20yinstnce10, mn20xn0yinstnce10 ,();
link(184.38,0.0001,0.0), l3instnce10, mn20xn20yinstnce10, mn0xn20yinstnce10 ,();
link(184.38,0.0001,0.0), l4instnce10, mn20xn0yinstnce10, mn20x20yinstnce10 ,();
link(165.906,0.0001,0.0), l5instnce10, mn20xn0yinstnce10, mn0xn0yinstnce10 ,();
link(184.38,0.0001,0.0), l6instnce10, mn20x20yinstnce10, mn0x20yinstnce10 ,();
link(184.38,0.0001,0.0), l7instnce10, mn0xn40yinstnce10, mn0xn20yinstnce10 ,();
link(165.906,0.0001,0.0), l8instnce10, mn0xn20yinstnce10, mn0xn0yinstnce10 ,();
link(184.38,0.0001,0.0), l9instnce10, mn0xn20yinstnce10, m20xn20yinstnce10 ,();
link(165.906,0.0001,0.0), l10instnce10, mn0xn0yinstnce10, mn0x20yinstnce10 ,();
link(165.906,0.0001,0.0), l11instnce10, mn0xn0yinstnce10, m20xn0yinstnce10 ,();
link(184.38,0.0001,0.0), l12instnce10, mn0x20yinstnce10, mn0x40yinstnce10 ,();
link(184.38,0.0001,0.0), l13instnce10, mn0x20yinstnce10, m20x20yinstnce10 ,();
link(184.38,0.0001,0.0), l14instnce10, m20xn20yinstnce10, m20xn0yinstnce10 ,();
link(184.38,0.0001,0.0), l15instnce10, m20xn0yinstnce10, m20x20yinstnce10 ,();
link(184.38,0.0001,0.0), l16instnce10, m20xn0yinstnce10, m40xn0yinstnce10 ,();
ground(0.0), mn40xn40yinstnce22 ,();
ground(0.0), mn40xn20yinstnce22 ,();
ground(0.0), mn40xn0yinstnce22 ,();
ground(0.0), mn40x20yinstnce22 ,();
ground(0.0), mn40x40yinstnce22 ,();
ground(0.0), mn20xn40yinstnce22 ,();
ground(0.0), mn20xn20yinstnce22 ,();
	mass(5e-05*(1.0 + 0.511811*(0.836068)),0.0,0.0),mn20xn0yinstnce22,();
ground(0.0), mn20x20yinstnce22 ,();
ground(0.0), mn20x40yinstnce22 ,();
ground(0.0), mn0xn40yinstnce22 ,();
	mass(5e-05*(1.0 + 0.511811*(-0.799939)),0.0,0.0),mn0xn20yinstnce22,();
	mass(9.14028e-05*(1.0 + 0.511811*(0.574577)),0.0,0.0),massSnrmn0xn20yinstnce22,();
link(300,0.00,0.0), linkSnrmn0xn20yinstnce22, snareGroundinstnce22, massSnrmn0xn20yinstnce22 ,();
touch(3940.91,0.0728724,0.0), touchSnrmn0xn20yinstnce22, mn0xn20yinstnce22, massSnrmn0xn20yinstnce22 ,();
	mass(5e-05*(1.0 + 0.511811*(-0.542241)),0.0,0.0),mn0xn0yinstnce22,();
	mass(5e-05*(1.0 + 0.511811*(0.567359)),0.0,0.0),mn0x20yinstnce22,();
	mass(4.76391e-05*(1.0 + 0.511811*(-0.119600)),0.0,0.0),massSnrmn0x20yinstnce22,();
link(300,0.00,0.0), linkSnrmn0x20yinstnce22, snareGroundinstnce22, massSnrmn0x20yinstnce22 ,();
touch(4862.17,0.0728724,0.0), touchSnrmn0x20yinstnce22, mn0x20yinstnce22, massSnrmn0x20yinstnce22 ,();
ground(0.0), mn0x40yinstnce22 ,();
ground(0.0), m20xn40yinstnce22 ,();
ground(0.0), m20xn20yinstnce22 ,();
	mass(5e-05*(1.0 + 0.511811*(-0.918061)),0.0,0.0),m20xn0yinstnce22,();
	mass(0.000169552*(1.0 + 0.511811*(-0.061272)),0.0,0.0),massSnrm20xn0yinstnce22,();
link(300,0.00,0.0), linkSnrm20xn0yinstnce22, snareGroundinstnce22, massSnrm20xn0yinstnce22 ,();
touch(3326.73,0.0728724,0.0), touchSnrm20xn0yinstnce22, m20xn0yinstnce22, massSnrm20xn0yinstnce22 ,();
ground(0.0), m20x20yinstnce22 ,();
ground(0.0), m20x40yinstnce22 ,();
ground(0.0), m40xn40yinstnce22 ,();
ground(0.0), m40xn20yinstnce22 ,();
ground(0.0), m40xn0yinstnce22 ,();
ground(0.0), m40x20yinstnce22 ,();
ground(0.0), m40x40yinstnce22 ,();
	mass(0.001,0.0,0.0),drumstickinstnce22,();
touch(127.645,0,0.0), ttinstnce22, mn0xn0yinstnce22, drumstickinstnce22,();
ground(0.0), snareGroundinstnce22 ,();
link(722.254,0.00481969,0.0), l1instnce22, mn40xn0yinstnce22, mn20xn0yinstnce22 ,();
link(722.254,0.00481969,0.0), l2instnce22, mn20xn20yinstnce22, mn20xn0yinstnce22 ,();
link(722.254,0.00481969,0.0), l3instnce22, mn20xn20yinstnce22, mn0xn20yinstnce22 ,();
link(722.254,0.00481969,0.0), l4instnce22, mn20xn0yinstnce22, mn20x20yinstnce22 ,();
link(867.48,0.00639291,0.0), l5instnce22, mn20xn0yinstnce22, mn0xn0yinstnce22 ,();
link(722.254,0.00481969,0.0), l6instnce22, mn20x20yinstnce22, mn0x20yinstnce22 ,();
link(722.254,0.00481969,0.0), l7instnce22, mn0xn40yinstnce22, mn0xn20yinstnce22 ,();
link(867.48,0.00639291,0.0), l8instnce22, mn0xn20yinstnce22, mn0xn0yinstnce22 ,();
link(722.254,0.00481969,0.0), l9instnce22, mn0xn20yinstnce22, m20xn20yinstnce22 ,();
link(867.48,0.00639291,0.0), l10instnce22, mn0xn0yinstnce22, mn0x20yinstnce22 ,();
link(867.48,0.00639291,0.0), l11instnce22, mn0xn0yinstnce22, m20xn0yinstnce22 ,();
link(722.254,0.00481969,0.0), l12instnce22, mn0x20yinstnce22, mn0x40yinstnce22 ,();
link(722.254,0.00481969,0.0), l13instnce22, mn0x20yinstnce22, m20x20yinstnce22 ,();
link(722.254,0.00481969,0.0), l14instnce22, m20xn20yinstnce22, m20xn0yinstnce22 ,();
link(722.254,0.00481969,0.0), l15instnce22, m20xn0yinstnce22, m20x20yinstnce22 ,();
link(722.254,0.00481969,0.0), l16instnce22, m20xn0yinstnce22, m40xn0yinstnce22 ,();
ground(0.0), mn40xn40yinstnce13 ,();
ground(0.0), mn40xn20yinstnce13 ,();
ground(0.0), mn40xn0yinstnce13 ,();
ground(0.0), mn40x20yinstnce13 ,();
ground(0.0), mn40x40yinstnce13 ,();
ground(0.0), mn20xn40yinstnce13 ,();
ground(0.0), mn20xn20yinstnce13 ,();
	mass(0.000119469*(1.0 + 0*(0.836068)),0.0,0.0),mn20xn0yinstnce13,();
ground(0.0), mn20x20yinstnce13 ,();
ground(0.0), mn20x40yinstnce13 ,();
ground(0.0), mn0xn40yinstnce13 ,();
	mass(0.000119469*(1.0 + 0*(-0.799939)),0.0,0.0),mn0xn20yinstnce13,();
	mass(0.000110159*(1.0 + 0*(0.574577)),0.0,0.0),massSnrmn0xn20yinstnce13,();
link(0.23,0.00,0.0), linkSnrmn0xn20yinstnce13, snareGroundinstnce13, massSnrmn0xn20yinstnce13 ,();
touch(2866.1,0.0953228,0.0), touchSnrmn0xn20yinstnce13, mn0xn20yinstnce13, massSnrmn0xn20yinstnce13 ,();
	mass(0.000119469*(1.0 + 0*(-0.542241)),0.0,0.0),mn0xn0yinstnce13,();
	mass(0.000119469*(1.0 + 0*(0.567359)),0.0,0.0),mn0x20yinstnce13,();
	mass(5.7017e-05*(1.0 + 0*(-0.119600)),0.0,0.0),massSnrmn0x20yinstnce13,();
link(0.23,0.00,0.0), linkSnrmn0x20yinstnce13, snareGroundinstnce13, massSnrmn0x20yinstnce13 ,();
touch(1330.67,0.0953228,0.0), touchSnrmn0x20yinstnce13, mn0x20yinstnce13, massSnrmn0x20yinstnce13 ,();
ground(0.0), mn0x40yinstnce13 ,();
ground(0.0), m20xn40yinstnce13 ,();
ground(0.0), m20xn20yinstnce13 ,();
	mass(0.000119469*(1.0 + 0*(-0.918061)),0.0,0.0),m20xn0yinstnce13,();
	mass(7.26469e-05*(1.0 + 0*(-0.061272)),0.0,0.0),massSnrm20xn0yinstnce13,();
link(0.23,0.00,0.0), linkSnrm20xn0yinstnce13, snareGroundinstnce13, massSnrm20xn0yinstnce13 ,();
touch(1944.84,0.0953228,0.0), touchSnrm20xn0yinstnce13, m20xn0yinstnce13, massSnrm20xn0yinstnce13 ,();
ground(0.0), m20x20yinstnce13 ,();
ground(0.0), m20x40yinstnce13 ,();
ground(0.0), m40xn40yinstnce13 ,();
ground(0.0), m40xn20yinstnce13 ,();
ground(0.0), m40xn0yinstnce13 ,();
ground(0.0), m40x20yinstnce13 ,();
ground(0.0), m40x40yinstnce13 ,();
	mass(0.001,0.0,0.0),drumstickinstnce13,();
touch(400,0.0425197,0.0), ttinstnce13, drumstickinstnce13, mn0xn0yinstnce13 ,();
ground(0.0), snareGroundinstnce13 ,();
link(184.38,0.00245984,0.0), l1instnce13, mn40xn0yinstnce13, mn20xn0yinstnce13 ,();
link(184.38,0.00245984,0.0), l2instnce13, mn20xn20yinstnce13, mn20xn0yinstnce13 ,();
link(184.38,0.00245984,0.0), l3instnce13, mn20xn20yinstnce13, mn0xn20yinstnce13 ,();
link(184.38,0.00245984,0.0), l4instnce13, mn20xn0yinstnce13, mn20x20yinstnce13 ,();
link(165.906,0.00324646,0.0), l5instnce13, mn20xn0yinstnce13, mn0xn0yinstnce13 ,();
link(184.38,0.00245984,0.0), l6instnce13, mn20x20yinstnce13, mn0x20yinstnce13 ,();
link(184.38,0.00245984,0.0), l7instnce13, mn0xn40yinstnce13, mn0xn20yinstnce13 ,();
link(165.906,0.00324646,0.0), l8instnce13, mn0xn20yinstnce13, mn0xn0yinstnce13 ,();
link(184.38,0.00245984,0.0), l9instnce13, mn0xn20yinstnce13, m20xn20yinstnce13 ,();
link(165.906,0.00324646,0.0), l10instnce13, mn0xn0yinstnce13, mn0x20yinstnce13 ,();
link(165.906,0.00324646,0.0), l11instnce13, mn0xn0yinstnce13, m20xn0yinstnce13 ,();
link(184.38,0.00245984,0.0), l12instnce13, mn0x20yinstnce13, mn0x40yinstnce13 ,();
link(184.38,0.00245984,0.0), l13instnce13, mn0x20yinstnce13, m20x20yinstnce13 ,();
link(184.38,0.00245984,0.0), l14instnce13, m20xn20yinstnce13, m20xn0yinstnce13 ,();
link(184.38,0.00245984,0.0), l15instnce13, m20xn0yinstnce13, m20x20yinstnce13 ,();
link(184.38,0.00245984,0.0), l16instnce13, m20xn0yinstnce13, m40xn0yinstnce13 ,();
ground(0.0), mn40xn40yinstnce16 ,();
ground(0.0), mn40xn20yinstnce16 ,();
ground(0.0), mn40xn0yinstnce16 ,();
ground(0.0), mn40x20yinstnce16 ,();
ground(0.0), mn40x40yinstnce16 ,();
ground(0.0), mn20xn40yinstnce16 ,();
ground(0.0), mn20xn20yinstnce16 ,();
	mass(0.0001*(1.0 + 0.220472*(0.836068)),0.0,0.0),mn20xn0yinstnce16,();
ground(0.0), mn20x20yinstnce16 ,();
ground(0.0), mn20x40yinstnce16 ,();
ground(0.0), mn0xn40yinstnce16 ,();
	mass(0.0001*(1.0 + 0.220472*(-0.799939)),0.0,0.0),mn0xn20yinstnce16,();
	mass(9.14028e-05*(1.0 + 0.220472*(0.574577)),0.0,0.0),massSnrmn0xn20yinstnce16,();
link(255.661,0.00,0.0), linkSnrmn0xn20yinstnce16, snareGroundinstnce16, massSnrmn0xn20yinstnce16 ,();
touch(6704.69,0.0494866,0.0), touchSnrmn0xn20yinstnce16, mn0xn20yinstnce16, massSnrmn0xn20yinstnce16 ,();
	mass(0.0001*(1.0 + 0.220472*(-0.542241)),0.0,0.0),mn0xn0yinstnce16,();
	mass(0.0001*(1.0 + 0.220472*(0.567359)),0.0,0.0),mn0x20yinstnce16,();
	mass(4.76391e-05*(1.0 + 0.220472*(-0.119600)),0.0,0.0),massSnrmn0x20yinstnce16,();
link(255.661,0.00,0.0), linkSnrmn0x20yinstnce16, snareGroundinstnce16, massSnrmn0x20yinstnce16 ,();
touch(4862.17,0.0494866,0.0), touchSnrmn0x20yinstnce16, mn0x20yinstnce16, massSnrmn0x20yinstnce16 ,();
ground(0.0), mn0x40yinstnce16 ,();
ground(0.0), m20xn40yinstnce16 ,();
ground(0.0), m20xn20yinstnce16 ,();
	mass(0.0001*(1.0 + 0.220472*(-0.918061)),0.0,0.0),m20xn0yinstnce16,();
	mass(0.000169552*(1.0 + 0.220472*(-0.061272)),0.0,0.0),massSnrm20xn0yinstnce16,();
link(255.661,0.00,0.0), linkSnrm20xn0yinstnce16, snareGroundinstnce16, massSnrm20xn0yinstnce16 ,();
touch(7933.03,0.0494866,0.0), touchSnrm20xn0yinstnce16, m20xn0yinstnce16, massSnrm20xn0yinstnce16 ,();
ground(0.0), m20x20yinstnce16 ,();
ground(0.0), m20x40yinstnce16 ,();
ground(0.0), m40xn40yinstnce16 ,();
ground(0.0), m40xn20yinstnce16 ,();
ground(0.0), m40xn0yinstnce16 ,();
ground(0.0), m40x20yinstnce16 ,();
ground(0.0), m40x40yinstnce16 ,();
	mass(0.001,0.0,0.0),drumstickinstnce16,();
touch(127.645,0,0.0), ttinstnce16, mn0xn0yinstnce16, drumstickinstnce16 ,();
ground(0.0), snareGroundinstnce16 ,();
link(1000,0.000886614,0.0), l1instnce16, mn40xn0yinstnce16, mn20xn0yinstnce16 ,();
link(1000,0.000886614,0.0), l2instnce16, mn20xn20yinstnce16, mn20xn0yinstnce16 ,();
link(1000,0.000886614,0.0), l3instnce16, mn20xn20yinstnce16, mn0xn20yinstnce16 ,();
link(1000,0.000886614,0.0), l4instnce16, mn20xn0yinstnce16, mn20x20yinstnce16 ,();
link(1000,0.00167323,0.0), l5instnce16, mn20xn0yinstnce16, mn0xn0yinstnce16 ,();
link(1000,0.000886614,0.0), l6instnce16, mn20x20yinstnce16, mn0x20yinstnce16 ,();
link(1000,0.000886614,0.0), l7instnce16, mn0xn40yinstnce16, mn0xn20yinstnce16 ,();
link(1000,0.00167323,0.0), l8instnce16, mn0xn20yinstnce16, mn0xn0yinstnce16 ,();
link(1000,0.000886614,0.0), l9instnce16, mn0xn20yinstnce16, m20xn20yinstnce16 ,();
link(1000,0.00167323,0.0), l10instnce16, mn0xn0yinstnce16, mn0x20yinstnce16 ,();
link(1000,0.00167323,0.0), l11instnce16, mn0xn0yinstnce16, m20xn0yinstnce16 ,();
link(1000,0.000886614,0.0), l12instnce16, mn0x20yinstnce16, mn0x40yinstnce16 ,();
link(1000,0.000886614,0.0), l13instnce16, mn0x20yinstnce16, m20x20yinstnce16 ,();
link(1000,0.000886614,0.0), l14instnce16, m20xn20yinstnce16, m20xn0yinstnce16 ,();
link(1000,0.000886614,0.0), l15instnce16, m20xn0yinstnce16, m20x20yinstnce16 ,();
link(1000,0.000886614,0.0), l16instnce16, m20xn0yinstnce16, m40xn0yinstnce16 ,();




audioout,aL,((mn20xn0yinstnce10*0 + mn0xn0yinstnce10*0.25*0.874016 + 0*mn0xn20yinstnce10+ 0*mn0x20yinstnce10+ 0*m20xn0yinstnce10)*1.7*(2400000.0)*0.267638*0  +  (mn20xn0yinstnce22*0.125906 + mn0xn0yinstnce22*0.25*2.00787 + 0.0787402*mn0xn20yinstnce22+ 0.0787402*mn0x20yinstnce22+ 0.0787402*m20xn0yinstnce22)*(2400000.0)*0.810945*1  +  (mn20xn0yinstnce13*0 + mn0xn0yinstnce13*0.25*1.32283 + 0.866142*mn0xn20yinstnce13+ 0.866142*mn0x20yinstnce13+ 0.866142*m20xn0yinstnce13)*(2400000.0)*0.149528*0.874016  +  (mn20xn0yinstnce16*0.125906 + mn0xn0yinstnce16*0.25*2.00787 + 0.275591*mn0xn20yinstnce16+ 0.275591*mn0x20yinstnce16+ 0.275591*m20xn0yinstnce16)*(2400000.0)*0.33*1*0.535433):highpass(1,2000.0):highpass(1,1000.0);
audioout,aR,((mn20xn0yinstnce10*0 + mn0xn0yinstnce10*0.25*0.874016 + 0*mn0xn20yinstnce10+ 0*mn0x20yinstnce10+ 0*m20xn0yinstnce10)*1.7*(2400000.0)*0.267638*(1.0-0)  +  (mn20xn0yinstnce22*0.125906 + mn0xn0yinstnce22*0.25*2.00787 + 0.0787402*mn0xn20yinstnce22+ 0.0787402*mn0x20yinstnce22+ 0.0787402*m20xn0yinstnce22)*(2400000.0)*0.810945*(1.0-1)  +  (mn20xn0yinstnce13*0 + mn0xn0yinstnce13*0.25*1.32283 + 0.866142*mn0xn20yinstnce13+ 0.866142*mn0x20yinstnce13+ 0.866142*m20xn0yinstnce13)*(2400000.0)*0.149528*(1.0-0.874016)  +  (mn20xn0yinstnce16*0.125906 + mn0xn0yinstnce16*0.25*2.00787 + 0.275591*mn0xn20yinstnce16+ 0.275591*mn0x20yinstnce16+ 0.275591*m20xn0yinstnce16)*(2400000.0)*0.33*1*(1.0-0.535433)):highpass(1,2000.0):highpass(1,1000.0);









link(80.6299,0.2,0.02), lllinstnce10, dev2, drumstickinstnce10 ,(label);
link(80.6299,0.2,-0.02), lllinstnce22, dev2, drumstickinstnce22 ,(label);
link(80.6299,0.2,0.02), lllinstnce13, dev1, drumstickinstnce13 ,(label);
link(80.6299,0.2,-0.02), lllinstnce16, dev1, drumstickinstnce16,(label);




faustcode:pulseMultiplier1=hslider("Bottom right: Pulse strength", 0.5, 0.0, 5.0, 0.01);
faustcode:pulseMultiplier2=hslider("Bottom left: Pulse strength", 0.5, 0.0, 5.0, 0.01);
faustcode:pulseMultiplier3=hslider("Top right: Pulse strength", 0.5, 0.0, 5.0, 0.01);
faustcode:pulseMultiplier4=hslider("Top left: Pulse strength", 0.5, 0.0, 5.0, 0.01);

faustcode:pulseLength1=hslider("Bottom right: Pulse length [sec]", 0.012, 0.001, 0.1, 0.001);
faustcode:pulseLength2=hslider("Bottom left: Pulse length [sec]", 0.012, 0.001, 0.1, 0.001);
faustcode:pulseLength3=hslider("Top right: Pulse length [sec]", 0.012, 0.001, 0.1, 0.001);
faustcode:pulseLength4=hslider("Top left: Pulse length [sec]", 0.012, 0.001, 0.1, 0.001);

faustcode:stiffness=hslider("*Link stiffness [N/m]", 0.0, 0.0, 50.0, 0.1);
faustcode:damping=hslider("*Link damping [N/(m/s)]", 0.0, 0.0, 0.5, 0.01);


pulseTouchTable(stiffness,damping,0.02,pulseMultiplier1,pulseLength1*2.0,pulseLength1,(1.0, 0.1, 0.1),3),l1pos,dev1,thegrnd,();
pulseTouchTable(stiffness,damping,0.02,pulseMultiplier2,pulseLength2*2.0,pulseLength2,(1.0, 1.0, 1.0),3),l1neg,thegrnd,dev1,();

pulseTouchTable(stiffness,damping,0.02,pulseMultiplier3,pulseLength3*2.0,pulseLength3,(1.0, 0.2, 0.2),3),l2pos,dev2,thegrnd,();
pulseTouchTable(stiffness,damping,0.02,pulseMultiplier4,pulseLength4*2.0,pulseLength4,(1.0, 1.0, 1.0),3),l2neg,thegrnd,dev2,();





ground(0.02),grndhigh,();
ground(-0.02),grndlow,();
ground(0.0),thegrnd,();
port( ),dev1,();
port( ),dev2,();





