// Some physical modeling primitives written in Faust code.
//
// 2011 and 2012 by Edgar Berdahl
// Audio Communication Group, Technical University of Berlin
//
// This file is GPL licensed v2.
//
// These are only some of the primitives contained in Synth-A-Modeler.

import("music.lib");
import("effect.lib");

// Forward Euler differentiator
differentiator = _ <: (_, mem) : - : *(fs) : _;


link(k,R,o) = _ : (_-o) <: (_,_) : (*(k),  (_ <: (_,_) : (_, mem) : - : *(R*fs))) : (_,_) : + : _;



// Correct implementation of touch
touch(k,R,o) = _ : -(o) <: (_,_,_) : (*(k),  (_ <: (_,_) : (_, mem) : - : *(R*fs)), (_>0.0)) : (_,_,_) : (+,_) : * : _;



















// The following is put together via Kjetil S. Matheussen's approach on the Faust mailing list 
// and the documentation on rdtable (including in music.lib)
presetInitIndex = (+(1)~_) - 1;  // 0,1,2,3,É
mytake(k,total,longlist) = longlist : par(i,total,*(k==i)) :> _; 
round = _:+(0.5):int:_;





// e.g. 
// NOTE:  Due to a bug in Faust's rdtable, tableLength > 1   !!!
pulseTouchTable(k,R,o,pulseMultiplier,pulseTau,pulseLen,theTable,tableLength) = pulseTouchGeneral(k,R,o,pulseMultiplier,pulseTau,pulseLen,rdtable(tableLength,mytake(presetInitIndex,tableLength,theTable)),tableLength);




// e.g. pulseTouchGeneral(100.0,0.01,0.0,250.0,0.001,0.025,rdtable(100,noise:+(0.5)), 100);
pulseTouchGeneral(k,R,o,pulseMultiplier,pulseTau,pulseLen,mapMultiplier,mapMultiplierLength) = _ <: (_,_,_) : (*(k),  (_ <: (_,_) : (_, mem) : - : *(R*fs)), (_>o)) : (_,_,(_<:(_,_))) : (+,_,((*:_<:(_,_):(+~(*(decayConst))<:(_,_):(<(pulseThresh),_)),_)~(_,!,!):(!,_,_):(*(pulseMultiplier),(selectNextTableIndex:int:mapMultiplier)):(_,_):*)) : (*,_) : + : _
with {
	selectNextTableIndex = _<:(_,_):(1.0-_,_):((myPermute,_) : (*,((+(1.0):round:%(mapMultiplierLength:round)),_:*)):(_,_) : +)~(_<:(_,_));
	myPermute(a,b,c) = (a,c,b);

	decayConst = exp(-1.0/pulseTau/fs);
	pulseThresh = exp(-pulseLen/pulseTau);
};









// pulseTau and pulseLen are in seconds -- this models the haptic drum link
// The pulse switches off as soon as the decaying exponential falls beneath pulseThresh.
//
// Need to be careful about the sign of pulseMultiplier !!!
//
// Maybe it would be nicer to make the pulseMultiplier correspond to the momentum transfer instead ...
pulseTouch(k,R,o,pulseMultiplier,pulseTau,pulseLen) = _ <: (_,_,_) : (*(k),  (_ <: (_,_) : (_, mem) : - : *(R*fs)), (_>o)) : (_,_,(_<:(_,_))) : (+,_,((*:+~(*(decayConst))<:(_,_):(<(pulseThresh),_))~(_,!):(!,_):*(pulseMultiplier))) : (*,_) : + : _
with {
	decayConst = exp(-1.0/pulseTau/fs);
	pulseThresh = exp(-pulseLen/pulseTau);
};





























// So for now we are rigidly setting the sampling rate:
fs = 44100.0;


timeCounter = (+(1)~(_) );   // 1,2,3,... 
impulseStart = (timeCounter == 1);
mass(m,x0,v0) = (/(m*fs*fs) : ((_,_ : +) ~ (_:+((v0/fs):*(impulseStart)))) : ((_,_ : +) ~ (_:+((x0-v0/fs):*(impulseStart)))));


ground(g)=_:!:g;